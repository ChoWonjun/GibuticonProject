<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="freeBoard">
	<sql id="selectFreeBoard">
		select board_no,title,write_date,content,hits,id from free_board
	</sql>
	<resultMap type="freeBoardVO" id="freeBoardRM">
      <result property="boardNo" column="board_no" />
      <result property="writeDate" column="write_date"/>
   </resultMap>
	<insert id="writeFreeBoard" parameterType="freeBoardVO">
		<selectKey keyProperty="boardNo" resultType="string" order="BEFORE">
			select free_board_sequence.nextval from dual
		</selectKey>
		insert into free_board(
		board_no, title, write_date, content, hits, id,ref,restep,relevel
		)
		values(#{boardNo},#{title},sysdate,#{content},0,#{id},#{boardNo},0,0)
	</insert>
	<delete id="deleteFreeBoard">
		delete from free_board where board_no=#{value}
	</delete>
	<update id="updateFreeBoard" parameterType="freeBoardVO">
		update free_board set title=#{title},content=#{content}
		where board_no=#{boardNo}
	</update>
	<select id="getFreeBoardByNo" resultMap="freeBoardRM">
		<include refid="selectFreeBoard" />
		where board_no=#{value}
	</select>
	<select id="getFreeBoardList" parameterType="string" resultMap="freeBoardRM">
		   select board_no, title, write_date, content, hits, id from(
        select board_no, title, write_date, content, hits, id, ceil(rownum/5) as page from
      (select board_no, title, to_char(write_date,'YYYY.MM.DD') as write_date, content, hits, id 
      from free_board order by ref desc, restep asc))where page=#{value}
	</select>


	<select id="getListBySearchingTitle" parameterType="hashmap"
		resultMap="freeBoardRM">
		select board_no, title, write_date, content, hits, id from(
		select board_no, title, write_date, content, hits, id, ceil(rownum/5) as
		page from
		(select board_no, title, to_char(write_date,'YYYY.MM.DD') as write_date,
		content, hits, id
		from free_board
		<where>
			<if test="input != null">
				title like '%' || #{input} || '%'
			</if>
		</where>
		order by ref desc, restep asc))where page=#{page}
	</select>
	
	<select id="getListBySearchingContent" parameterType="hashmap" resultMap="freeBoardRM">
			   select board_no, title, write_date, content, hits, id from(
        select board_no, title, write_date, content, hits, id, ceil(rownum/5) as page from
      (select board_no, title, to_char(write_date,'YYYY.MM.DD') as write_date, content, hits, id 
      from free_board
      <where>
			<if test="input != null">
				content like '%' || #{input} || '%'
			</if>
		</where>
		order by ref desc, restep asc))where page=#{page}
	</select>
	
	<select id="getPageNo" resultType="string">
		select page from(
			select board_no, ceil(rownum/5) as page from(
				select board_no from free_board order by board_no desc
			)
		) where board_no=#{boardNo}
	</select>
	
	<select id="getTotalPostingCount" resultType="int">
		select count(*) from free_board
	</select>
	
	<update id="updateHit" parameterType="string">
		update free_board set hits=hits+1 where board_no=#{boardNo}
	</update>
	
	<select id="replyView" resultMap="freeBoardRM" parameterType="string">
		select * from free_board where board_no=#{value}
	</select>
	
	<update id="replyUpdate" parameterType="freeBoardVO">
		update free_board set restep=restep+1 where ref=#{ref} and restep>=#{restep}
	</update>
	
	<insert id="replyWrite" parameterType="freeBoardVO">
		<selectKey keyProperty="boardNo" resultType="string" order="BEFORE">
		select free_board_sequence.nextval from dual
	</selectKey>  
  insert into free_board(
	  board_no,title,write_date, content, hits,id,ref,restep,relevel	  
  )  values(#{boardNo},#{title},sysdate,#{content},0,#{id},#{ref},#{restep},#{relevel})
	</insert>
</mapper>

